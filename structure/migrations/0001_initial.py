# Generated by Django 4.0.10 on 2023-04-05 05:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Actuator_type',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('coordinate_latitude', models.FloatField()),
                ('coordinate_longitude', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Org',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
                ('password', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Variable',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('units', models.CharField(max_length=20)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('value', models.FloatField()),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.crop')),
                ('variable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.variable')),
            ],
        ),
        migrations.AddField(
            model_name='crop',
            name='org',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.org'),
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('min_value', models.FloatField()),
                ('max_value', models.FloatField()),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.crop')),
                ('variable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.variable')),
            ],
        ),
        migrations.CreateModel(
            name='Actuator',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('mqtt_topic', models.CharField(max_length=64)),
                ('actuator_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.actuator_type')),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.crop')),
            ],
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('permission_type', models.CharField(choices=[('view', 'View'), ('edit', 'Edit'), ('control', 'Control'), ('add', 'Add'), ('delete', 'Delete'), ('assign', 'Assign Permissions')], max_length=10)),
                ('granted', models.BooleanField(default=False)),
                ('_id', models.CharField(editable=False, max_length=255, unique=True)),
                ('crop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='structure.crop')),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.org')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'org', 'crop', 'permission_type')},
            },
        ),
    ]
